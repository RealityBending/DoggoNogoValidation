---
title: "DoggoNogoValidation - Data Cleaning"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: false
    toc: true
execute: 
  cache: false
---


## Data Preparation

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(ggdist)
```

```{r}
#| code-fold: false

df <- read.csv("../data/rawdata_participants.csv") |>
  dplyr::mutate(across(c(Experiment_StartDate, DoggoNogo_Start, DoggoNogo_End, DoggoNogo_L1_Start, DoggoNogo_L1_End), as.POSIXct)) |>
  dplyr::mutate(
    DoggoNogo_Duration = as.numeric(DoggoNogo_End - DoggoNogo_Start),
    SimpleRT_Duration = ((SimpleRT_end - SimpleRT_start) / 1000) / 60
  )

df_simpleRT <- read.csv("../data/rawdata_simpleRT.csv")
df_doggo <- read.csv("../data/rawdata_doggonogo.csv")
```


The initial sample of complete data consisted of `r report::report_participants(dplyr::select(df, Age, Gender, Education), age="Age", gender="Gender", education="Education")`, for a total trial number of `r nrow(df_doggo)+nrow(df_simpleRT)`.


### Recruitment History

```{r}
#| message: false

# Consecutive count of participants per day (as area)
df |>
  mutate(Date = Experiment_StartDate) |> 
  group_by(Date, Recruitment) |> 
  summarize(N = n()) |> 
  ungroup() |>
  complete(Date, Recruitment, fill = list(N = 0)) |> 
  group_by(Recruitment) |>
  mutate(N = cumsum(N)) |>
  ggplot(aes(x = Date, y = N)) +
  geom_area(aes(fill=Recruitment)) +
  scale_y_continuous(expand = c(0, 0)) +
  labs(
    title = "Recruitment History",
    x = "Date",
    y = "Total Number of Participants"
  ) +
  see::theme_modern()
```

### Experiment Duration

The experiment's median duration is `r insight::format_value(median(df$Experiment_Duration))` min (`r insight::format_ci(bayestestR::hdi(df$Experiment_Duration, ci=0.5))`).
The median duration of DoggoNogo was `r insight::format_value(median(df$DoggoNogo_Duration))` min (`r insight::format_ci(bayestestR::hdi(df$DoggoNogo_Duration, ci=0.5))`) and the median duration of the simple RT task was `r insight::format_value(median(df$SimpleRT_Duration))` min (`r insight::format_ci(bayestestR::hdi(df$SimpleRT_Duration, ci=0.5))`).


```{r}
### Do outliers here matter that much? For overall time? Guessing more important might be duration of individual tasks?

df |>
  mutate(Participant = fct_reorder(Participant, Experiment_Duration),
         Category = ifelse(Experiment_Duration > 35, "extra", "ok"),
         Duration = ifelse(Experiment_Duration > 35, 35, Experiment_Duration)) |>
  ggplot(aes(y = Participant, x = Duration)) +
  geom_point(aes(color = Category, shape = Category)) +
  geom_vline(xintercept = median(df$Experiment_Duration), color = "red", linetype = "dashed") +
  scale_shape_manual(values = c("extra" = 3, ok = 19)) +
  scale_color_manual(values = c("extra" = "red", ok = "black")) +
  guides(color = "none", shape = "none") +
  ggside::geom_xsidedensity(fill = "grey", color=NA) +
  ggside::scale_xsidey_continuous(expand = c(0, 0)) +
  labs(
    title = "Experiment Completion Time",
    x = "Duration (in minutes)",
    y = "Participants"
  )  +
  see::theme_modern() +
  ggside::theme_ggside_void() +
  theme(ggside.panel.scale = .3, 
        axis.text.y = element_blank()) 

#TODO: potentially filter out extra slow as it biases the reg line
df |>
  mutate(Participant = fct_reorder(Participant, DoggoNogo_Duration),
         Category = ifelse(DoggoNogo_Duration > 20, "extra", "ok"),
         DoggoNogo_Duration = ifelse(DoggoNogo_Duration > 20, 20, DoggoNogo_Duration),
         SimpleRT_Duration = ifelse(SimpleRT_Duration > 20, 20, SimpleRT_Duration),
         Category = ifelse(SimpleRT_Duration > 20, "extra", Category)) |>
  ggplot(aes(x=DoggoNogo_Duration, y=SimpleRT_Duration)) +
  geom_point(aes(color = Category, shape = Category), alpha = 0.3) +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
  geom_smooth(method = "lm", formula = 'y ~ x', color = "orange", fill="orange", alpha=0.1) +
  scale_shape_manual(values = c("extra" = 3, ok = 19)) +
  scale_color_manual(values = c("extra" = "red", ok = "black")) +
  labs(
    title = "Tasks Duration",
    x = "DoggoNogo Duration (in minutes)",
    y = "SimpleRT Duration (in minutes)"
  ) +
  see::theme_modern() +
  ggside::geom_xsidedensity(fill = "grey", color=NA) +
  ggside::geom_ysidedensity(fill = "grey", color=NA) +
  ggside::theme_ggside_void() 
```


### Experiment Feedback

```{r}
data.frame(Feedback = df$Experiment_Feedback) |> 
  filter(!is.na(Feedback) & !Feedback %in% c("no", "N\\A")) |>
  gt::gt() |> 
  gt::opt_interactive() 
```


## Exclusions

```{r}
exclusions <- list()
```

### Task performance

```{r}
data_nvalid <- rbind(
  summarize(df_doggo, n_valid=sum((Response_Type != "early") & (Response_Type != "missed")), .by="Participant") |> 
    mutate(Task = "DoggoNogo") |> 
    mutate(Participant = fct_reorder(Participant, n_valid)),
  summarize(df_simpleRT, n_valid=sum(!is.na(RT)), .by="Participant") |> 
    mutate(Task = "SimpleRT")
) 

data_nvalid |> 
  ggplot(aes(x=Participant, y = n_valid, fill = Task)) +
  geom_bar(position = "dodge", stat = "identity") +
  theme_minimal() +
  theme(axis.text.x = element_blank()) +
  ggside::geom_ysidedensity(alpha=0.5, color=NA) +
  ggside::theme_ggside_void() 
```

```{r}
exclusions$n_valid <- as.character(filter(data_nvalid, Task=="SimpleRT" & data_nvalid$n_valid < 100)$Participant)
```

We removed `r length(exclusions$n_valid)` (`r length(exclusions$n_valid) / nrow(df)`) participants who missed more than one-third of trials in the simple RT task.

```{r}
df <- filter(df, !Participant %in% exclusions$n_valid)
df_doggo <- filter(df_doggo, !Participant %in% exclusions$n_valid)
df_simpleRT <- filter(df_simpleRT, !Participant %in% exclusions$n_valid)
```


### Reaction Time


```{r}
data_rtdist <- rbind(
  df_doggo |> 
    filter(Response_Type != "early" & Response_Type != "missed") |>
    select(Participant, RT) |>
    mutate(Task = "DoggoNogo"),
  df_simpleRT |>
    filter(!is.na(RT)) |>
    select(Participant, RT) |>
    mutate(Task = "SimpleRT"))

data_shape <- data_rtdist |> 
  summarize(Kurtosis = kurtosis(RT)$Kurtosis, 
            Skewness = skewness(RT)$Skewness, 
            .by=c("Participant", "Task")) |> 
  mutate(Outlier = ifelse(Skewness < 0.5 & Kurtosis < 0.5, "Outlier", "Normal"))

p_shape1 <- data_shape |> 
  mutate(Participant = fct_reorder(Participant, Skewness, .fun=mean)) |>
  ggplot(aes(x=Participant, y = Skewness, fill = Task)) +
  geom_bar(position = "dodge", stat = "identity") +
  theme_minimal() +
  theme(axis.text.x = element_blank()) +
  ggside::geom_ysidedensity(alpha=0.5, color=NA) 

p_shape2 <- data_shape |> 
  ggplot(aes(x=Skewness, y=Kurtosis)) +
  geom_rect(ymin=-Inf, ymax=0.5, xmin=-Inf, xmax=0.5, alpha=0.2, fill="#FFCDD2") +
  geom_point(aes(color=Task)) +
  geom_smooth(aes(color=Task, fill=Task), method = "loess", formula = 'y ~ x') +
  ggside::geom_ysidedensity(aes(fill=Task), alpha=0.5, color=NA) +
  ggside::geom_xsidedensity(aes(fill=Task), alpha=0.5, color=NA) +
  theme_minimal() 

p_shape2 | p_shape1

exclusions$shape <- unique(as.character(filter(data_shape, Outlier == "Outlier")$Participant))
```


```{r}
#| fig-width: 15
#| fig-height: 15

data_rtdist |>
  merge(data_shape, by=c("Participant", "Task")) |>
  ggplot(aes(x=RT, color=Outlier)) +
  geom_density(aes(group=interaction(Participant, Task, Outlier)), alpha=0.3) +
  theme_minimal() +
  scale_color_manual(values = c("Normal" = "black", "Outlier" = "red")) +
  facet_grid(Task~Outlier) +
  theme_minimal() +
  theme(axis.text.y = element_blank())
```

We removed `r length(exclusions$shape)` (`r length(exclusions$shape) / nrow(df)`) participants who had an outlying joint-score of skewness and kurtosis.

```{r}
df <- filter(df, !Participant %in% exclusions$shape)
df_doggo <- filter(df_doggo, !Participant %in% exclusions$shape)
df_simpleRT <- filter(df_simpleRT, !Participant %in% exclusions$shape)
```


## Final Sample

The final sample includes `r report::report_participants(df |> dplyr::select(Age, Gender, Education), age="Age", gender="Gender", education="Education")`.

### Age

```{r}
estimate_density(df$Age) |>
  normalize(select = y) |>
  mutate(y = y * max(df$Age)-min(df$Age)) |>  # To match the binwidth
  ggplot(aes(x = x)) +
  geom_histogram(data=df, aes(x = Age, fill=Gender), bins=max(df$Age)-min(df$Age)) +
  geom_vline(xintercept = mean(df$Age), color = "red", linewidth=1.5, linetype="dashed") +
  # scale_fill_manual(values = c("Male"= "#64B5F6", "Female"= "#F06292", "Other"="orange")) +
  scale_fill_viridis_d() +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  labs(title = "Age", y = "Number of Participants", color = NULL, subtitle = "Distribution of participants' age") +
  theme_modern(axis.title.space = 10) +
  theme(
    plot.title = element_text(size = rel(1.2), face = "bold", hjust = 0),
    plot.subtitle = element_text(size = rel(1.2), vjust = 7),
    axis.text.y = element_text(size = rel(1.1)),
    axis.text.x = element_text(size = rel(1.1)),
    axis.title.x = element_blank()
  )
```

### Gender

```{r, results='asis'}
#| code-fold: true

make_barplot <- function(df, var="Gender") {
  df |> 
    ggplot2::ggplot(aes(x = !!sym(var))) +
    ggplot2::geom_bar(aes(fill = !!sym(var))) +
    scale_y_continuous(expand = c(0, 0), breaks = scales::pretty_breaks()) +
    scale_fill_viridis_d(guide = "none") +
    labs(title = var, y = "Number of Participants", subtitle = ifelse(var == "Gender", "Participants per gender", "Participants per handedness")) +
    theme_modern(axis.title.space = 15) +
    theme(
      plot.title = element_text(size = rel(1.2), face = "bold", hjust = 0),
      plot.subtitle = element_text(size = rel(1.2), vjust = 7),
      axis.text.y = element_text(size = rel(1.1)),
      axis.text.x = element_text(size = rel(1.1)),
      axis.title.x = element_blank())
}

make_barplot(df, var="Gender")
```

### Handedness

```{r}
make_barplot(df, var="Handedness")
```


### Education

```{r}
df |> 
  mutate(
    Student = ifelse(is.na(Student), FALSE, Student),
    Education = fct_relevel(Education, "Other", "High school", "Bachelor", "Master", "Doctorate")) |>
  ggplot2::ggplot(aes(x = Education)) +
  ggplot2::geom_bar(aes(fill = Student)) +
  theme_minimal()
```

### Discipline


```{r}
df |> 
  filter(!is.na(Discipline)) |> 
  ggplot(aes(x = "", fill = Discipline)) +
  geom_bar() +
  coord_polar("y") +
  theme_minimal() +
  theme(
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    axis.title.y = element_blank()
  )
```

### Ethnicity

```{r}
df |> 
  filter(!is.na(Ethnicity)) |> 
  ggplot(aes(x = "", fill = Ethnicity)) +
  geom_bar() +
  coord_polar("y") +
  theme_minimal() +
  theme(
    axis.text.x = element_blank(),
    axis.title.x = element_blank(),
    axis.text.y = element_blank(),
    axis.title.y = element_blank()
  )
```

### Country

**TODO: add country map plot**



## Save

```{r}
#| code-fold: false

write.csv(df, "../data/data_participants.csv", row.names = FALSE)
write.csv(df_doggo, "../data/data_doggonogo.csv", row.names = FALSE)
write.csv(df_simpleRT, "../data/data_simpleRT.csv", row.names = FALSE)
```
